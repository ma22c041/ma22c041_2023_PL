# -*- coding: utf-8 -*-
"""approximating the derivative.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EsM8XC55047GoMLhYzZff-3YqDEaM1b1
"""

def D2(f, x, h=1E-6): #generic function D2 for implementing the function f
  return (f(x-h) -2*f(x) + f(x+h)) / (h*h)

from math import sin # applying the sine function
D2(sin, 0.2)

-sin(0.2) #appling the -sin(0 .2)

def g(x): return sin(2*x) # D2 for the sin2x
D2(g, 0.2)

D2(lambda x: sin(2*x), 0.2) # central diff approximation #using the lamda function

-4*sin(2* 0.2) # actual 2nd derivative value

print(' h D2 Result Error')        #appropximation to obtain error
for k in range(4,8): h = 2**(-k)
d2g = D2(lambda x: x**-6, 1, h=h)
e = d2g -42
print('%.0e %.5f %7.6f' %(h, d2g, e))

for k in range(1,14):   #reducing the h by factors of 10
  h = 10**(-k)
  d2g = D2(lambda x: x**-6,1, h)
  print('%.0e %18.5f' %(h, d2g))